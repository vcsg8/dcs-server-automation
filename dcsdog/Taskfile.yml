# https://taskfile.dev

version: '3'

vars:
  BINARY_NAME: dcsdog.exe

tasks:
  setup:
    desc: Set up development environment
    cmds:
      - go mod download
      - go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest

  lint:
    desc: Run golangci-lint
    cmds:
      - golangci-lint run --verbose --print-issued-lines=false --print-linter-name=true

  vet:
    desc: Run go vet
    cmds:
      - go vet ./...

  build:
    desc: Build the executable
    cmds:
      - go build -o {{.BINARY_NAME}}

  clean:
    desc: Remove build artifacts
    cmds:
      - rm -f {{.BINARY_NAME}}

  test:
    desc: Run tests
    cmds:
      - go test -v ./...

  release:
    desc: Create a new release tag (e.g., task release VERSION=1.0.0)
    summary: |
      This task creates and pushes a new git tag.
      It first runs all CI checks.
      Usage:
        task release VERSION=1.0.0
    preconditions:
      - sh: '[ -z "$(git status --porcelain)" ]'
        msg: "Git working directory is not clean. Please commit or stash changes."
      - sh: '[[ -n "{{.VERSION}}" ]]'
        msg: "VERSION is required. Usage: task release VERSION=1.0.0"
    deps: [ci]
    cmds:
      - git tag dcsdog/v{{.VERSION}}
      - git push origin dcsdog/v{{.VERSION}}
    silent: true

  ci:
    desc: Run all checks
    deps: [lint, vet, test]

  default:
    deps: [ci]